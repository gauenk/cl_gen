#!/usr/bin/python3.8

import sys,glob,os
from pathlib import Path
sys.path.append("/home/gauenk/Documents/experiments/cl_gen/lib/")
from cache_io.uuid_cache import UUIDCache,print_config

def create_uuid_list_from_glob(path_l):
    uuid_l = []
    # glob_path_l = str(path_l) + "*"
    for filename in path_l:
        uuid_l.append(str(Path(filename).stem))
    return uuid_l

if len(sys.argv) == 1:
    print("lsc allows users to quickly read cache info.")
    print("Usage: lsc [version] [path_to_json_dir] [glob_to_uuid_dir]")
    exit()

try:
    version = float(sys.argv[1])
except:
    version = sys.argv[1]
    print("lsc recommends the second argument be a float.")
    # exit()

root = Path(sys.argv[2])
version = sys.argv[1]
cache = UUIDCache(root,version)

if not cache.uuid_file.exists():
    print(f"lsc detects the UUID cache version [{version}] does not exist.")
    exit()

# -- collect configs from paths --
path_l = sys.argv[2:]
uuid_l = create_uuid_list_from_glob(path_l)
config_l = cache.get_config_from_uuid_list(uuid_l)
if len(config_l) == 1 and config_l[0] == -1:
    print("No uuids selected so printing UUID Database")
    for uuid,config in cache.data.items():
        print("-="*35)
        print(f"\tUUID: {uuid}")
        print_config(config,indent=8)
else:
    # -- print results --
    for path,uuid,config in zip(path_l,uuid_l,config_l):
        if config != -1:
            print("-="*35)
            print(f"Path: {path}")
            print(f"\tUUID: {uuid}")
            print_config(config,indent=8)
    
